{"version":3,"file":"listview.component.d.ts","sources":["listview.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, ViewContainerRef, Renderer2, Injector } from '@angular/core';\nimport { IComponentBase } from '@syncfusion/ej2-angular-base';\nimport { ListView } from '@syncfusion/ej2-lists';\nexport declare const inputs: string[];\nexport declare const outputs: string[];\nexport declare const twoWays: string[];\n/**\n * Represents Angular ListView Component\n * ```\n * <ejs-listview [dataSource]='data'></ejs-listview>\n * ```\n */\nexport declare class ListViewComponent extends ListView implements IComponentBase {\n    private ngEle;\n    private srenderer;\n    private viewContainerRef;\n    private injector;\n    context: any;\n    tagObjects: any;\n    actionBegin: any;\n    actionComplete: any;\n    actionFailure: any;\n    select: any;\n    /**\n     * The ListView component supports to customize the content of each list items with the help of `template` property.\n     *\n     * {% codeBlock src='listview/template/index.md' %}{% endcodeBlock %}\n     *\n     * @default null\n\n     */\n    template: any;\n    /**\n     * The ListView has an option to custom design the group header title with the help of `groupTemplate` property.\n     *\n     * {% codeBlock src=\"listview/groupTemplate/index.md\" %}{% endcodeBlock %}\n     *\n     * @default null\n\n     */\n    groupTemplate: any;\n    /**\n     * The ListView has an option to custom design the ListView header title with the help of `headerTemplate` property.\n     *\n     * {% codeBlock src=\"listview/headerTemplate/index.md\" %}{% endcodeBlock %}\n     *\n     * @default null\n\n     */\n    headerTemplate: any;\n    constructor(ngEle: ElementRef, srenderer: Renderer2, viewContainerRef: ViewContainerRef, injector: Injector);\n    ngOnInit(): void;\n    ngAfterViewInit(): void;\n    ngOnDestroy(): void;\n    ngAfterContentChecked(): void;\n    registerEvents: (eventList: string[]) => void;\n    addTwoWay: (propList: string[]) => void;\n}\n"]}