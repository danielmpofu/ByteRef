{"version":3,"file":"conditionalformats.directive.d.ts","sources":["conditionalformats.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ViewContainerRef } from '@angular/core';\nimport { ComplexBase, ArrayBase } from '@syncfusion/ej2-angular-base';\n/**\n * `e-conditionalformat` directive represent a conditionalformat of the Angular Spreadsheet.\n * It must be contained in a `e-sheet` directive.\n * ```html\n * <ejs-spreadsheet>\n *   <e-sheets>\n *    <e-sheet>\n *    <e-conditionalformats>\n *    <e-conditionalformat></e-conditionalformat>\n *    </e-conditionalformats>\n *    </e-sheet>\n *   </e-sheets>\n * </ejs-spreadsheet>\n * ```\n */\nexport declare class ConditionalFormatDirective extends ComplexBase<ConditionalFormatDirective> {\n    private viewContainerRef;\n    directivePropList: any;\n    /**\n     * Specifies Conditional formatting Type.\n     * @default 'GreaterThan'\n     * @aspignore\n     */\n    type: any;\n    /**\n     * Specifies Conditional formatting Highlight Color.\n     * @default 'RedFT'\n     */\n    cFColor: any;\n    /**\n     * Specifies format.\n     * @default {}\n     */\n    format: any;\n    /**\n     * Specifies Conditional formatting range.\n     * @default ''\n     */\n    range: any;\n    /**\n     * Specifies Conditional formatting Value.\n     * @default ''\n     */\n    value: any;\n    constructor(viewContainerRef: ViewContainerRef);\n}\n/**\n * ConditionalFormat Array Directive\n * @private\n */\nexport declare class ConditionalFormatsDirective extends ArrayBase<ConditionalFormatsDirective> {\n    constructor();\n}\n"]}