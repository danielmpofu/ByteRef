{"version":3,"file":"ej2-angular-spreadsheet.js","sources":["~/@syncfusion/ej2-angular-spreadsheet/src/spreadsheet/image.directive.ts","~/@syncfusion/ej2-angular-spreadsheet/src/spreadsheet/chart.directive.ts","~/@syncfusion/ej2-angular-spreadsheet/src/spreadsheet/cells.directive.ts","~/@syncfusion/ej2-angular-spreadsheet/src/spreadsheet/rows.directive.ts","~/@syncfusion/ej2-angular-spreadsheet/src/spreadsheet/columns.directive.ts","~/@syncfusion/ej2-angular-spreadsheet/src/spreadsheet/ranges.directive.ts","~/@syncfusion/ej2-angular-spreadsheet/src/spreadsheet/conditionalformats.directive.ts","~/@syncfusion/ej2-angular-spreadsheet/src/spreadsheet/sheets.directive.ts","~/@syncfusion/ej2-angular-spreadsheet/src/spreadsheet/definednames.directive.ts","~/@syncfusion/ej2-angular-spreadsheet/src/spreadsheet/spreadsheet.component.ts","~/@syncfusion/ej2-angular-spreadsheet/src/spreadsheet/spreadsheet.module.ts","~/@syncfusion/ej2-angular-spreadsheet/src/spreadsheet/spreadsheet-all.module.ts","~/@syncfusion/ej2-angular-spreadsheet/ej2-angular-spreadsheet.ts"],"names":["input","outputs","__decorate","__metadata"],"mappings":"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","sourcesContent":["import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet /** @type {?} */ input: string[] = ['height', 'id', 'left', 'src', 'top', 'width'];\nlet /** @type {?} */ outputs: string[] = [];\nexport class ImageDirective extends ComplexBase<ImageDirective> {\npublic directivePropList: any;\n/**\n * Specifies the height of the image.\n * \\@default 300\n * \\@asptype int\n */\npublic height: any;\n/**\n * Specifies image element id.\n * \\@default ''\n */\npublic id: any;\n/**\n * Specifies the width of the image.\n * \\@default 0\n * \\@asptype int\n */\npublic left: any;\n/**\n * Specifies the image source.\n * \\@default ''\n */\npublic src: any;\n/**\n * Specifies the height of the image.\n * \\@default 0\n * \\@asptype int\n */\npublic top: any;\n/**\n * Specifies the width of the image.\n * \\@default 400\n * \\@asptype int\n */\npublic width: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-images>e-image',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction ImageDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nImageDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nImageDirective.ctorParameters;\n/** @type {?} */\nImageDirective.prototype.directivePropList;\n/**\n * Specifies the height of the image.\n * \\@default 300\n * \\@asptype int\n * @type {?}\n */\nImageDirective.prototype.height;\n/**\n * Specifies image element id.\n * \\@default ''\n * @type {?}\n */\nImageDirective.prototype.id;\n/**\n * Specifies the width of the image.\n * \\@default 0\n * \\@asptype int\n * @type {?}\n */\nImageDirective.prototype.left;\n/**\n * Specifies the image source.\n * \\@default ''\n * @type {?}\n */\nImageDirective.prototype.src;\n/**\n * Specifies the height of the image.\n * \\@default 0\n * \\@asptype int\n * @type {?}\n */\nImageDirective.prototype.top;\n/**\n * Specifies the width of the image.\n * \\@default 400\n * \\@asptype int\n * @type {?}\n */\nImageDirective.prototype.width;\n/** @type {?} */\nImageDirective.prototype.viewContainerRef;\n}\n\n/**\n * Image Array Directive\n */\nexport class ImagesDirective extends ArrayBase<ImagesDirective> {\nconstructor() {\n        super('image');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-cell>e-images',\n    queries: {\n        children: new ContentChildren(ImageDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ImagesDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nImagesDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nImagesDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet /** @type {?} */ input: string[] = ['dataLabelSettings', 'height', 'id', 'isSeriesInRows', 'legendSettings', 'primaryXAxis', 'primaryYAxis', 'range', 'theme', 'title', 'type', 'width'];\nlet /** @type {?} */ outputs: string[] = [];\nexport class ChartDirective extends ComplexBase<ChartDirective> {\npublic directivePropList: any;\n/**\n * Specifies the type of a chart.\n * \\@default 'Line'\n */\npublic type: any;\n/**\n * The data label for the series.\n * \\@default {}\n */\npublic dataLabelSettings: any;\n/**\n * Specifies the height of the chart.\n * \\@default 290\n */\npublic height: any;\n/**\n * Specifies chart element id.\n * \\@default ''\n */\npublic id: any;\n/**\n * Specifies to switch the row or a column.\n * \\@default false\n */\npublic isSeriesInRows: any;\n/**\n * Options for customizing the legend of the chart.\n * \\@default {}\n */\npublic legendSettings: any;\n/**\n * Options to configure the horizontal axis.\n * \\@default {}\n */\npublic primaryXAxis: any;\n/**\n * Options to configure the vertical axis.\n * \\@default {}\n */\npublic primaryYAxis: any;\n/**\n * Specifies the selected range or specified range.\n * \\@default ''\n */\npublic range: any;\n/**\n * Specifies the theme of a chart.\n * \\@default 'Material'\n */\npublic theme: any;\n/**\n * Title of the chart\n * \\@default ''\n */\npublic title: any;\n/**\n * Specifies the width of the chart.\n * \\@default 480\n */\npublic width: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-charts>e-chart',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction ChartDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nChartDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nChartDirective.ctorParameters;\n/** @type {?} */\nChartDirective.prototype.directivePropList;\n/**\n * Specifies the type of a chart.\n * \\@default 'Line'\n * @type {?}\n */\nChartDirective.prototype.type;\n/**\n * The data label for the series.\n * \\@default {}\n * @type {?}\n */\nChartDirective.prototype.dataLabelSettings;\n/**\n * Specifies the height of the chart.\n * \\@default 290\n * @type {?}\n */\nChartDirective.prototype.height;\n/**\n * Specifies chart element id.\n * \\@default ''\n * @type {?}\n */\nChartDirective.prototype.id;\n/**\n * Specifies to switch the row or a column.\n * \\@default false\n * @type {?}\n */\nChartDirective.prototype.isSeriesInRows;\n/**\n * Options for customizing the legend of the chart.\n * \\@default {}\n * @type {?}\n */\nChartDirective.prototype.legendSettings;\n/**\n * Options to configure the horizontal axis.\n * \\@default {}\n * @type {?}\n */\nChartDirective.prototype.primaryXAxis;\n/**\n * Options to configure the vertical axis.\n * \\@default {}\n * @type {?}\n */\nChartDirective.prototype.primaryYAxis;\n/**\n * Specifies the selected range or specified range.\n * \\@default ''\n * @type {?}\n */\nChartDirective.prototype.range;\n/**\n * Specifies the theme of a chart.\n * \\@default 'Material'\n * @type {?}\n */\nChartDirective.prototype.theme;\n/**\n * Title of the chart\n * \\@default ''\n * @type {?}\n */\nChartDirective.prototype.title;\n/**\n * Specifies the width of the chart.\n * \\@default 480\n * @type {?}\n */\nChartDirective.prototype.width;\n/** @type {?} */\nChartDirective.prototype.viewContainerRef;\n}\n\n/**\n * Chart Array Directive\n */\nexport class ChartsDirective extends ArrayBase<ChartsDirective> {\nconstructor() {\n        super('chart');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-cell>e-charts',\n    queries: {\n        children: new ContentChildren(ChartDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ChartsDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nChartsDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nChartsDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren, ContentChild } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\nimport { ImagesDirective } from './image.directive';\nimport { ChartsDirective } from './chart.directive';\n\nlet /** @type {?} */ input: string[] = ['chart', 'colSpan', 'format', 'formula', 'hyperlink', 'image', 'index', 'isLocked', 'rowSpan', 'style', 'validation', 'value', 'wrap'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * `e-cell` directive represent a cell of the Angular Spreadsheet.\n * It must be contained in a `e-row` directive.\n * ```html\n * <ejs-spreadsheet>\n *   <e-sheets>\n *    <e-sheet>\n *    <e-rows>\n *    <e-row>\n *    <e-cells>\n *    <e-cell value='A1'></e-cell>\n *    </e-cells>\n *    </e-row>\n *    </e-rows>\n *    </e-sheet>\n *   </e-sheets>\n * </ejs-spreadsheet>\n * ```\n */\nexport class CellDirective extends ComplexBase<CellDirective> {\npublic directivePropList: any;\npublic childImage: any;\npublic childChart: any;\npublic tags: string[] = ['image', 'chart'];\n/**\n * Specifies the chart of the cell.\n * \\@default []\n */\npublic chart: any;\n/**\n * Specifies the column-wise cell merge count.\n * \\@default 1\n * \\@asptype int\n */\npublic colSpan: any;\n/**\n * Specifies the number format code to display value in specified number format.\n * \\@default 'General'\n */\npublic format: any;\n/**\n * Defines the formula or expression of the cell.\n * \\@default ''\n */\npublic formula: any;\n/**\n * Specifies the hyperlink of the cell.\n * \\@default ''\n */\npublic hyperlink: any;\n/**\n * Specifies the image of the cell.\n * \\@default []\n */\npublic image: any;\n/**\n * Specifies the index of the cell.\n * \\@default 0\n * \\@asptype int\n */\npublic index: any;\n/**\n * Specifies the cell is locked or not, for allow edit range in spreadsheet protect option.\n * \\@default null\n */\npublic isLocked: any;\n/**\n * Specifies the row-wise cell merge count.\n * \\@default 1\n * \\@asptype int\n */\npublic rowSpan: any;\n/**\n * Specifies the cell style options. \n *  \n * \\@default {}\n */\npublic style: any;\n/**\n * Specifies the validation of the cell.\n * \\@default ''\n */\npublic validation: any;\n/**\n * Defines the value of the cell which can be text or number.\n * \\@default ''\n */\npublic value: any;\n/**\n * Wraps the cell text to the next line, if the text width exceeds the column width.\n * \\@default false\n */\npublic wrap: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-cells>e-cell',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n        childImage: new ContentChild(ImagesDirective), \n        childChart: new ContentChild(ChartsDirective)\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction CellDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nCellDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCellDirective.ctorParameters;\n/** @type {?} */\nCellDirective.prototype.directivePropList;\n/** @type {?} */\nCellDirective.prototype.childImage;\n/** @type {?} */\nCellDirective.prototype.childChart;\n/** @type {?} */\nCellDirective.prototype.tags;\n/**\n * Specifies the chart of the cell.\n * \\@default []\n * @type {?}\n */\nCellDirective.prototype.chart;\n/**\n * Specifies the column-wise cell merge count.\n * \\@default 1\n * \\@asptype int\n * @type {?}\n */\nCellDirective.prototype.colSpan;\n/**\n * Specifies the number format code to display value in specified number format.\n * \\@default 'General'\n * @type {?}\n */\nCellDirective.prototype.format;\n/**\n * Defines the formula or expression of the cell.\n * \\@default ''\n * @type {?}\n */\nCellDirective.prototype.formula;\n/**\n * Specifies the hyperlink of the cell.\n * \\@default ''\n * @type {?}\n */\nCellDirective.prototype.hyperlink;\n/**\n * Specifies the image of the cell.\n * \\@default []\n * @type {?}\n */\nCellDirective.prototype.image;\n/**\n * Specifies the index of the cell.\n * \\@default 0\n * \\@asptype int\n * @type {?}\n */\nCellDirective.prototype.index;\n/**\n * Specifies the cell is locked or not, for allow edit range in spreadsheet protect option.\n * \\@default null\n * @type {?}\n */\nCellDirective.prototype.isLocked;\n/**\n * Specifies the row-wise cell merge count.\n * \\@default 1\n * \\@asptype int\n * @type {?}\n */\nCellDirective.prototype.rowSpan;\n/**\n * Specifies the cell style options. \n *  \n * \\@default {}\n * @type {?}\n */\nCellDirective.prototype.style;\n/**\n * Specifies the validation of the cell.\n * \\@default ''\n * @type {?}\n */\nCellDirective.prototype.validation;\n/**\n * Defines the value of the cell which can be text or number.\n * \\@default ''\n * @type {?}\n */\nCellDirective.prototype.value;\n/**\n * Wraps the cell text to the next line, if the text width exceeds the column width.\n * \\@default false\n * @type {?}\n */\nCellDirective.prototype.wrap;\n/** @type {?} */\nCellDirective.prototype.viewContainerRef;\n}\n\n/**\n * Cell Array Directive\n */\nexport class CellsDirective extends ArrayBase<CellsDirective> {\nconstructor() {\n        super('cells');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-row>e-cells',\n    queries: {\n        children: new ContentChildren(CellDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction CellsDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nCellsDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCellsDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren, ContentChild } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\nimport { CellsDirective } from './cells.directive';\n\nlet /** @type {?} */ input: string[] = ['cells', 'customHeight', 'format', 'height', 'hidden', 'index'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * `e-row` directive represent a row of the Angular Spreadsheet.\n * It must be contained in a `e-sheet` directive.\n * ```html\n * <ejs-spreadsheet>\n *   <e-sheets>\n *    <e-sheet>\n *    <e-rows>\n *    <e-row></e-row>\n *    </e-rows>\n *    </e-sheet>\n *   </e-sheets>\n * </ejs-spreadsheet>\n * ```\n */\nexport class RowDirective extends ComplexBase<RowDirective> {\npublic directivePropList: any;\npublic childCells: any;\npublic tags: string[] = ['cells'];\n/**\n * Specifies cell and its properties for the row.\n * \\@default []\n */\npublic cells: any;\n/**\n * specifies custom height of the row.\n * \\@default false\n */\npublic customHeight: any;\n/**\n * Specifies format of the row.\n * \\@default {}\n */\npublic format: any;\n/**\n * Specifies height of the row.\n * \\@default 20\n * \\@asptype int\n */\npublic height: any;\n/**\n * To hide/show the row in spreadsheet.\n * \\@default false\n */\npublic hidden: any;\n/**\n * Specifies the index to the row. Based on the index, row properties are applied.\n * \\@default 0\n * \\@asptype int\n */\npublic index: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-rows>e-row',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n        childCells: new ContentChild(CellsDirective)\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction RowDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nRowDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRowDirective.ctorParameters;\n/** @type {?} */\nRowDirective.prototype.directivePropList;\n/** @type {?} */\nRowDirective.prototype.childCells;\n/** @type {?} */\nRowDirective.prototype.tags;\n/**\n * Specifies cell and its properties for the row.\n * \\@default []\n * @type {?}\n */\nRowDirective.prototype.cells;\n/**\n * specifies custom height of the row.\n * \\@default false\n * @type {?}\n */\nRowDirective.prototype.customHeight;\n/**\n * Specifies format of the row.\n * \\@default {}\n * @type {?}\n */\nRowDirective.prototype.format;\n/**\n * Specifies height of the row.\n * \\@default 20\n * \\@asptype int\n * @type {?}\n */\nRowDirective.prototype.height;\n/**\n * To hide/show the row in spreadsheet.\n * \\@default false\n * @type {?}\n */\nRowDirective.prototype.hidden;\n/**\n * Specifies the index to the row. Based on the index, row properties are applied.\n * \\@default 0\n * \\@asptype int\n * @type {?}\n */\nRowDirective.prototype.index;\n/** @type {?} */\nRowDirective.prototype.viewContainerRef;\n}\n\n/**\n * Row Array Directive\n */\nexport class RowsDirective extends ArrayBase<RowsDirective> {\nconstructor() {\n        super('rows');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-sheet>e-rows',\n    queries: {\n        children: new ContentChildren(RowDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction RowsDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nRowsDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRowsDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet /** @type {?} */ input: string[] = ['customWidth', 'format', 'hidden', 'index', 'isLocked', 'validation', 'width'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * `e-column` directive represent a column of the Angular Spreadsheet.\n * It must be contained in a `e-sheet` directive.\n * ```html\n * <ejs-spreadsheet>\n *   <e-sheets>\n *    <e-sheet>\n *    <e-columns>\n *    <e-column width='100'></e-column>\n *    </e-columns>\n *    </e-sheet>\n *   </e-sheets>\n * </ejs-spreadsheet>\n * ```\n */\nexport class ColumnDirective extends ComplexBase<ColumnDirective> {\npublic directivePropList: any;\n/**\n * specifies custom width of the column.\n * \\@default false\n */\npublic customWidth: any;\n/**\n * Specifies format of the column.\n * \\@default {}\n */\npublic format: any;\n/**\n * To hide/show the column in spreadsheet.\n * \\@default false\n */\npublic hidden: any;\n/**\n * Specifies index of the column. Based on the index, column properties are applied.\n * \\@default 0\n * \\@asptype int\n */\npublic index: any;\n/**\n * To lock/unlock the column in the protected sheet.\n * \\@default true\n */\npublic isLocked: any;\n/**\n * Specifies the validation of the column.\n * \\@default ''\n */\npublic validation: any;\n/**\n * Specifies width of the column.\n * \\@default 64\n * \\@asptype int\n */\npublic width: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-columns>e-column',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction ColumnDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nColumnDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColumnDirective.ctorParameters;\n/** @type {?} */\nColumnDirective.prototype.directivePropList;\n/**\n * specifies custom width of the column.\n * \\@default false\n * @type {?}\n */\nColumnDirective.prototype.customWidth;\n/**\n * Specifies format of the column.\n * \\@default {}\n * @type {?}\n */\nColumnDirective.prototype.format;\n/**\n * To hide/show the column in spreadsheet.\n * \\@default false\n * @type {?}\n */\nColumnDirective.prototype.hidden;\n/**\n * Specifies index of the column. Based on the index, column properties are applied.\n * \\@default 0\n * \\@asptype int\n * @type {?}\n */\nColumnDirective.prototype.index;\n/**\n * To lock/unlock the column in the protected sheet.\n * \\@default true\n * @type {?}\n */\nColumnDirective.prototype.isLocked;\n/**\n * Specifies the validation of the column.\n * \\@default ''\n * @type {?}\n */\nColumnDirective.prototype.validation;\n/**\n * Specifies width of the column.\n * \\@default 64\n * \\@asptype int\n * @type {?}\n */\nColumnDirective.prototype.width;\n/** @type {?} */\nColumnDirective.prototype.viewContainerRef;\n}\n\n/**\n * Column Array Directive\n */\nexport class ColumnsDirective extends ArrayBase<ColumnsDirective> {\nconstructor() {\n        super('columns');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-sheet>e-columns',\n    queries: {\n        children: new ContentChildren(ColumnDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ColumnsDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nColumnsDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColumnsDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren, ContentChild } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\nimport { Template } from '@syncfusion/ej2-angular-base';\n\n\nlet /** @type {?} */ input: string[] = ['address', 'dataSource', 'query', 'showFieldAsHeader', 'startCell', 'template'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * `e-range` directive represent a range of the Angular Spreadsheet.\n * It must be contained in a `e-sheet` directive.\n * ```html\n * <ejs-spreadsheet>\n *   <e-sheets>\n *    <e-sheet>\n *    <e-ranges>\n *    <e-range [dataSource]='data'></e-range>\n *    </e-ranges>\n *    </e-sheet>\n *   </e-sheets>\n * </ejs-spreadsheet>\n * ```\n */\nexport class RangeDirective extends ComplexBase<RangeDirective> {\npublic directivePropList: any;\n/**\n * Specifies the address for updating the dataSource or template.\n * \\@default 'A1'\n */\npublic address: any;\n/**\n * Specifies the data as JSON / Data manager to the sheet.\n * \\@default null\n */\npublic dataSource: any;\n/**\n * Defines the external [`Query`](https://ej2.syncfusion.com/documentation/data/api-query.html) \n * that will be executed along with data processing.\n * \\@default null\n */\npublic query: any;\n/**\n * Show/Hide the field of the datasource as header.\n * \\@default true\n */\npublic showFieldAsHeader: any;\n/**\n * Specifies the start cell from which the datasource will be populated.\n * \\@default 'A1'\n */\npublic startCell: any;\n/**\n * Template helps to compiles the given HTML String (or HTML Element ID) into HtML Element and append to the Cell.\n * \n *  \\@default ''\n * \n */\n@Template()\n    public template: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-ranges>e-range',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'template': [{ type: ContentChild, args: ['template', ] },],\n};\n}\n\nfunction RangeDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nRangeDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRangeDirective.ctorParameters;\n/** @type {?} */\nRangeDirective.propDecorators;\n/** @type {?} */\nRangeDirective.prototype.directivePropList;\n/**\n * Specifies the address for updating the dataSource or template.\n * \\@default 'A1'\n * @type {?}\n */\nRangeDirective.prototype.address;\n/**\n * Specifies the data as JSON / Data manager to the sheet.\n * \\@default null\n * @type {?}\n */\nRangeDirective.prototype.dataSource;\n/**\n * Defines the external [`Query`](https://ej2.syncfusion.com/documentation/data/api-query.html) \n * that will be executed along with data processing.\n * \\@default null\n * @type {?}\n */\nRangeDirective.prototype.query;\n/**\n * Show/Hide the field of the datasource as header.\n * \\@default true\n * @type {?}\n */\nRangeDirective.prototype.showFieldAsHeader;\n/**\n * Specifies the start cell from which the datasource will be populated.\n * \\@default 'A1'\n * @type {?}\n */\nRangeDirective.prototype.startCell;\n/**\n * Template helps to compiles the given HTML String (or HTML Element ID) into HtML Element and append to the Cell.\n * \n *  \\@default ''\n * \n * @type {?}\n */\nRangeDirective.prototype.template;\n/** @type {?} */\nRangeDirective.prototype.viewContainerRef;\n}\n\n/**\n * Range Array Directive\n */\nexport class RangesDirective extends ArrayBase<RangesDirective> {\nconstructor() {\n        super('ranges');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-sheet>e-ranges',\n    queries: {\n        children: new ContentChildren(RangeDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction RangesDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nRangesDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRangesDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet /** @type {?} */ input: string[] = ['cFColor', 'format', 'range', 'type', 'value'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * `e-conditionalformat` directive represent a conditionalformat of the Angular Spreadsheet.\n * It must be contained in a `e-sheet` directive.\n * ```html\n * <ejs-spreadsheet>\n *   <e-sheets>\n *    <e-sheet>\n *    <e-conditionalformats>\n *    <e-conditionalformat></e-conditionalformat>\n *    </e-conditionalformats>\n *    </e-sheet>\n *   </e-sheets>\n * </ejs-spreadsheet>\n * ```\n */\nexport class ConditionalFormatDirective extends ComplexBase<ConditionalFormatDirective> {\npublic directivePropList: any;\n/**\n * Specifies Conditional formatting Type.\n * \\@default 'GreaterThan'\n * \\@aspignore\n */\npublic type: any;\n/**\n * Specifies Conditional formatting Highlight Color.\n * \\@default 'RedFT'\n */\npublic cFColor: any;\n/**\n * Specifies format.\n * \\@default {}\n */\npublic format: any;\n/**\n * Specifies Conditional formatting range.\n * \\@default ''\n */\npublic range: any;\n/**\n * Specifies Conditional formatting Value.\n * \\@default ''\n */\npublic value: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-conditionalformats>e-conditionalformat',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction ConditionalFormatDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nConditionalFormatDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nConditionalFormatDirective.ctorParameters;\n/** @type {?} */\nConditionalFormatDirective.prototype.directivePropList;\n/**\n * Specifies Conditional formatting Type.\n * \\@default 'GreaterThan'\n * \\@aspignore\n * @type {?}\n */\nConditionalFormatDirective.prototype.type;\n/**\n * Specifies Conditional formatting Highlight Color.\n * \\@default 'RedFT'\n * @type {?}\n */\nConditionalFormatDirective.prototype.cFColor;\n/**\n * Specifies format.\n * \\@default {}\n * @type {?}\n */\nConditionalFormatDirective.prototype.format;\n/**\n * Specifies Conditional formatting range.\n * \\@default ''\n * @type {?}\n */\nConditionalFormatDirective.prototype.range;\n/**\n * Specifies Conditional formatting Value.\n * \\@default ''\n * @type {?}\n */\nConditionalFormatDirective.prototype.value;\n/** @type {?} */\nConditionalFormatDirective.prototype.viewContainerRef;\n}\n\n/**\n * ConditionalFormat Array Directive\n */\nexport class ConditionalFormatsDirective extends ArrayBase<ConditionalFormatsDirective> {\nconstructor() {\n        super('conditionalformats');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-sheet>e-conditionalformats',\n    queries: {\n        children: new ContentChildren(ConditionalFormatDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ConditionalFormatsDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nConditionalFormatsDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nConditionalFormatsDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren, ContentChild } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\nimport { RowsDirective } from './rows.directive';\nimport { ColumnsDirective } from './columns.directive';\nimport { RangesDirective } from './ranges.directive';\nimport { ConditionalFormatsDirective } from './conditionalformats.directive';\n\nlet /** @type {?} */ input: string[] = ['activeCell', 'colCount', 'columns', 'conditionalFormats', 'frozenColumns', 'frozenRows', 'index', 'isProtected', 'name', 'paneTopLeftCell', 'password', 'protectSettings', 'ranges', 'rowCount', 'rows', 'selectedRange', 'showGridLines', 'showHeaders', 'state', 'topLeftCell', 'usedRange'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * `e-sheet` directive represent a sheet of the Angular Spreadsheet.\n * It must be contained in a Spreadsheet component(`ejs-spreadsheet`).\n * ```html\n * <ejs-spreadsheet>\n *   <e-sheets>\n *    <e-sheet></e-sheet>\n *    <e-sheet></e-sheet>\n *   </e-sheets>\n * </ejs-spreadsheet>\n * ```\n */\nexport class SheetDirective extends ComplexBase<SheetDirective> {\npublic directivePropList: any;\npublic childRows: any;\npublic childColumns: any;\npublic childRanges: any;\npublic childConditionalFormats: any;\npublic tags: string[] = ['rows', 'columns', 'ranges', 'conditionalFormats'];\n/**\n * Specifies active cell within `selectedRange` in the sheet.\n * \\@default 'A1'\n */\npublic activeCell: any;\n/**\n * Defines the number of columns to be rendered in the sheet.\n * \\@default 100\n * \\@asptype int\n */\npublic colCount: any;\n/**\n * Configures column and its properties for the sheet.\n * \\@default null\n */\npublic columns: any;\n/**\n * Specifies the conditional formatting for the sheet.\n * \\@default []\n */\npublic conditionalFormats: any;\n/**\n * Gets or sets the number of frozen columns.\n * \\@default 0\n * \\@asptype int\n */\npublic frozenColumns: any;\n/**\n * Gets or sets the number of frozen rows.\n * \\@default 0\n * \\@asptype int\n */\npublic frozenRows: any;\n/**\n * Specifies index of the sheet. Based on the index, sheet properties are applied.\n * \\@default 0\n * \\@asptype int\n */\npublic index: any;\n/**\n * Specifies to  protect the cells in the sheet.\n * \\@default false\n */\npublic isProtected: any;\n/**\n * Specifies the name of the sheet, the name will show in the sheet tabs.\n * \\@default ''\n */\npublic name: any;\n/**\n * Represents the freeze pane top left cell. Its default value would be based on the number of freeze rows and columns.\n * \\@default 'A1'\n */\npublic paneTopLeftCell: any;\n/**\n * Specifies the password.\n * \\@default ''\n */\npublic password: any;\n/**\n * Configures protect and its options.\n * \\@default { selectCells: false, formatCells: false, formatRows: false, formatColumns: false, insertLink: false  }\n */\npublic protectSettings: any;\n/**\n * Specifies the collection of range for the sheet.\n * \\@default []\n */\npublic ranges: any;\n/**\n * Defines the number of rows to be rendered in the sheet.\n * \\@default 100\n * \\@asptype int\n */\npublic rowCount: any;\n/**\n * Configures row and its properties for the sheet.\n * \\@default null\n */\npublic rows: any;\n/**\n * Specifies selected range in the sheet. \n *  \n * \\@default 'A1:A1'\n */\npublic selectedRange: any;\n/**\n * Specifies to show / hide grid lines in the sheet.\n * \\@default true\n */\npublic showGridLines: any;\n/**\n * Specifies to show / hide column and row headers in the sheet.\n * \\@default true\n */\npublic showHeaders: any;\n/**\n * Specifies the sheet visibility state. There must be at least one visible sheet in Spreadsheet.\n * \\@default 'Visible'\n */\npublic state: any;\n/**\n * Specified cell will be positioned at the upper-left corner of the sheet.\n * \\@default 'A1'\n */\npublic topLeftCell: any;\n/**\n * Defines the used range of the sheet.\n * \\@default { rowIndex: 0, colIndex: 0 }\n */\npublic usedRange: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-sheets>e-sheet',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n        childRows: new ContentChild(RowsDirective), \n        childColumns: new ContentChild(ColumnsDirective), \n        childRanges: new ContentChild(RangesDirective), \n        childConditionalFormats: new ContentChild(ConditionalFormatsDirective)\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction SheetDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nSheetDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSheetDirective.ctorParameters;\n/** @type {?} */\nSheetDirective.prototype.directivePropList;\n/** @type {?} */\nSheetDirective.prototype.childRows;\n/** @type {?} */\nSheetDirective.prototype.childColumns;\n/** @type {?} */\nSheetDirective.prototype.childRanges;\n/** @type {?} */\nSheetDirective.prototype.childConditionalFormats;\n/** @type {?} */\nSheetDirective.prototype.tags;\n/**\n * Specifies active cell within `selectedRange` in the sheet.\n * \\@default 'A1'\n * @type {?}\n */\nSheetDirective.prototype.activeCell;\n/**\n * Defines the number of columns to be rendered in the sheet.\n * \\@default 100\n * \\@asptype int\n * @type {?}\n */\nSheetDirective.prototype.colCount;\n/**\n * Configures column and its properties for the sheet.\n * \\@default null\n * @type {?}\n */\nSheetDirective.prototype.columns;\n/**\n * Specifies the conditional formatting for the sheet.\n * \\@default []\n * @type {?}\n */\nSheetDirective.prototype.conditionalFormats;\n/**\n * Gets or sets the number of frozen columns.\n * \\@default 0\n * \\@asptype int\n * @type {?}\n */\nSheetDirective.prototype.frozenColumns;\n/**\n * Gets or sets the number of frozen rows.\n * \\@default 0\n * \\@asptype int\n * @type {?}\n */\nSheetDirective.prototype.frozenRows;\n/**\n * Specifies index of the sheet. Based on the index, sheet properties are applied.\n * \\@default 0\n * \\@asptype int\n * @type {?}\n */\nSheetDirective.prototype.index;\n/**\n * Specifies to  protect the cells in the sheet.\n * \\@default false\n * @type {?}\n */\nSheetDirective.prototype.isProtected;\n/**\n * Specifies the name of the sheet, the name will show in the sheet tabs.\n * \\@default ''\n * @type {?}\n */\nSheetDirective.prototype.name;\n/**\n * Represents the freeze pane top left cell. Its default value would be based on the number of freeze rows and columns.\n * \\@default 'A1'\n * @type {?}\n */\nSheetDirective.prototype.paneTopLeftCell;\n/**\n * Specifies the password.\n * \\@default ''\n * @type {?}\n */\nSheetDirective.prototype.password;\n/**\n * Configures protect and its options.\n * \\@default { selectCells: false, formatCells: false, formatRows: false, formatColumns: false, insertLink: false  }\n * @type {?}\n */\nSheetDirective.prototype.protectSettings;\n/**\n * Specifies the collection of range for the sheet.\n * \\@default []\n * @type {?}\n */\nSheetDirective.prototype.ranges;\n/**\n * Defines the number of rows to be rendered in the sheet.\n * \\@default 100\n * \\@asptype int\n * @type {?}\n */\nSheetDirective.prototype.rowCount;\n/**\n * Configures row and its properties for the sheet.\n * \\@default null\n * @type {?}\n */\nSheetDirective.prototype.rows;\n/**\n * Specifies selected range in the sheet. \n *  \n * \\@default 'A1:A1'\n * @type {?}\n */\nSheetDirective.prototype.selectedRange;\n/**\n * Specifies to show / hide grid lines in the sheet.\n * \\@default true\n * @type {?}\n */\nSheetDirective.prototype.showGridLines;\n/**\n * Specifies to show / hide column and row headers in the sheet.\n * \\@default true\n * @type {?}\n */\nSheetDirective.prototype.showHeaders;\n/**\n * Specifies the sheet visibility state. There must be at least one visible sheet in Spreadsheet.\n * \\@default 'Visible'\n * @type {?}\n */\nSheetDirective.prototype.state;\n/**\n * Specified cell will be positioned at the upper-left corner of the sheet.\n * \\@default 'A1'\n * @type {?}\n */\nSheetDirective.prototype.topLeftCell;\n/**\n * Defines the used range of the sheet.\n * \\@default { rowIndex: 0, colIndex: 0 }\n * @type {?}\n */\nSheetDirective.prototype.usedRange;\n/** @type {?} */\nSheetDirective.prototype.viewContainerRef;\n}\n\n/**\n * Sheet Array Directive\n */\nexport class SheetsDirective extends ArrayBase<SheetsDirective> {\nconstructor() {\n        super('sheets');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ejs-spreadsheet>e-sheets',\n    queries: {\n        children: new ContentChildren(SheetDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SheetsDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nSheetsDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSheetsDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet /** @type {?} */ input: string[] = ['comment', 'name', 'refersTo', 'scope'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * `e-definedname` directive represent a defined name of the Angular Spreadsheet.\n * It must be contained in a Spreadsheet component(`ejs-spreadsheet`).\n * ```html\n * <ejs-spreadsheet>\n *   <e-definednames>\n *    <e-definedname></e-definedname>\n *    <e-definedname></e-definedname>\n *   </e-definednames>\n * </ejs-spreadsheet>\n * ```\n */\nexport class DefinedNameDirective extends ComplexBase<DefinedNameDirective> {\npublic directivePropList: any;\n/**\n * Specifies comment for the defined name.\n * \\@default ''\n */\npublic comment: any;\n/**\n * Specifies name for the defined name, which can be used in formula.\n * \\@default ''\n */\npublic name: any;\n/**\n * Specifies reference for the defined name.\n * \\@default ''\n */\npublic refersTo: any;\n/**\n * Specifies scope for the defined name.\n * \\@default ''\n */\npublic scope: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-definednames>e-definedname',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction DefinedNameDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nDefinedNameDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDefinedNameDirective.ctorParameters;\n/** @type {?} */\nDefinedNameDirective.prototype.directivePropList;\n/**\n * Specifies comment for the defined name.\n * \\@default ''\n * @type {?}\n */\nDefinedNameDirective.prototype.comment;\n/**\n * Specifies name for the defined name, which can be used in formula.\n * \\@default ''\n * @type {?}\n */\nDefinedNameDirective.prototype.name;\n/**\n * Specifies reference for the defined name.\n * \\@default ''\n * @type {?}\n */\nDefinedNameDirective.prototype.refersTo;\n/**\n * Specifies scope for the defined name.\n * \\@default ''\n * @type {?}\n */\nDefinedNameDirective.prototype.scope;\n/** @type {?} */\nDefinedNameDirective.prototype.viewContainerRef;\n}\n\n/**\n * DefinedName Array Directive\n */\nexport class DefinedNamesDirective extends ArrayBase<DefinedNamesDirective> {\nconstructor() {\n        super('definednames');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ejs-spreadsheet>e-definednames',\n    queries: {\n        children: new ContentChildren(DefinedNameDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DefinedNamesDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nDefinedNamesDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDefinedNamesDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ElementRef, ViewContainerRef, ChangeDetectionStrategy, QueryList, Renderer2, Injector, ValueProvider, ContentChild } from '@angular/core';\nimport { ComponentBase, IComponentBase, applyMixins, ComponentMixins, PropertyCollectionInfo, setValue } from '@syncfusion/ej2-angular-base';\nimport { Spreadsheet } from '@syncfusion/ej2-spreadsheet';\nimport { Template } from '@syncfusion/ej2-angular-base';\nimport { SheetsDirective } from './sheets.directive';\nimport { DefinedNamesDirective } from './definednames.directive';\n\nexport const /** @type {?} */ inputs: string[] = ['activeSheetIndex','allowAutoFill','allowCellFormatting','allowChart','allowConditionalFormat','allowDataValidation','allowDelete','allowEditing','allowFiltering','allowFindAndReplace','allowFreezePane','allowHyperlink','allowImage','allowInsert','allowMerge','allowNumberFormatting','allowOpen','allowResizing','allowSave','allowScrolling','allowSorting','allowUndoRedo','allowWrap','autoFillSettings','cellStyle','cssClass','definedNames','enableClipboard','enableContextMenu','enableKeyboardNavigation','enableKeyboardShortcut','enablePersistence','enableRtl','height','isProtected','locale','openUrl','password','saveUrl','scrollSettings','selectionSettings','sheets','showAggregate','showFormulaBar','showRibbon','showSheetTabs','width'];\nexport const /** @type {?} */ outputs: string[] = ['actionBegin','actionComplete','afterHyperlinkClick','afterHyperlinkCreate','beforeCellFormat','beforeCellRender','beforeCellSave','beforeCellUpdate','beforeConditionalFormat','beforeDataBound','beforeHyperlinkClick','beforeHyperlinkCreate','beforeOpen','beforeSave','beforeSelect','beforeSort','cellEdit','cellEditing','cellSave','contextMenuBeforeClose','contextMenuBeforeOpen','contextMenuItemSelect','created','dataBound','dataSourceChanged','dialogBeforeOpen','fileMenuBeforeClose','fileMenuBeforeOpen','fileMenuItemSelect','openComplete','openFailure','queryCellInfo','saveComplete','select','sortComplete'];\nexport const /** @type {?} */ twoWays: string[] = [''];\n/**\n * `ejs-spreadsheet` represents the Angular Spreadsheet Component.\n * ```html\n * <ejs-spreadsheet></ejs-spreadsheet>\n * ```\n */\n@ComponentMixins([ComponentBase])\nexport class SpreadsheetComponent extends Spreadsheet implements IComponentBase {\npublic context : any;\npublic tagObjects: any;\n\tactionBegin: any;\n\tactionComplete: any;\n\tafterHyperlinkClick: any;\n\tafterHyperlinkCreate: any;\n\tbeforeCellFormat: any;\n\tbeforeCellRender: any;\n\tbeforeCellSave: any;\n\tbeforeCellUpdate: any;\n\tbeforeConditionalFormat: any;\n\tbeforeDataBound: any;\n\tbeforeHyperlinkClick: any;\n\tbeforeHyperlinkCreate: any;\n\tbeforeOpen: any;\n\tbeforeSave: any;\n\tbeforeSelect: any;\n\tbeforeSort: any;\n\tcellEdit: any;\n\tcellEditing: any;\n\tcellSave: any;\n\tcontextMenuBeforeClose: any;\n\tcontextMenuBeforeOpen: any;\n\tcontextMenuItemSelect: any;\n\tcreated: any;\n\tdataBound: any;\n\tdataSourceChanged: any;\n\tdialogBeforeOpen: any;\n\tfileMenuBeforeClose: any;\n\tfileMenuBeforeOpen: any;\n\tfileMenuItemSelect: any;\n\topenComplete: any;\n\topenFailure: any;\n\tqueryCellInfo: any;\n\tsaveComplete: any;\n\tselect: any;\npublic sortComplete: any;\npublic childSheets: QueryList<SheetsDirective>;\npublic childDefinedNames: QueryList<DefinedNamesDirective>;\npublic tags: string[] = ['sheets', 'definedNames'];\n    \n    @Template()\npublic template: any;\n/**\n * @param {?} ngEle\n * @param {?} srenderer\n * @param {?} viewContainerRef\n * @param {?} injector\n */\nconstructor(private ngEle: ElementRef,\nprivate srenderer: Renderer2,\nprivate viewContainerRef:ViewContainerRef,\nprivate injector: Injector) {\n        super();\n        this.element = this.ngEle.nativeElement;\n        this.injectedModules = this.injectedModules || [];\n        try {\n                let mod = this.injector.get('SpreadsheetClipboard');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('SpreadsheetEdit');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('SpreadsheetKeyboardNavigation');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('SpreadsheetKeyboardShortcut');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('SpreadsheetCollaborativeEditing');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('SpreadsheetSelection');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('SpreadsheetContextMenu');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('SpreadsheetFormulaBar');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('SpreadsheetRibbon');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('SpreadsheetSave');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('SpreadsheetOpen');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('SpreadsheetSheetTabs');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('SpreadsheetDataBind');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('SpreadsheetAllModule');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('SpreadsheetBasicModule');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('SpreadsheetCellFormat');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('SpreadsheetNumberFormat');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('SpreadsheetFormula');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\n        this.registerEvents(outputs);\n        this.addTwoWay.call(this, twoWays);\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.context  = new ComponentBase();\n    }\n/**\n * @return {?}\n */\npublic ngOnInit() {\n        this.context.ngOnInit(this);\n    }\n/**\n * @return {?}\n */\npublic ngAfterViewInit(): void {\n        this.context.ngAfterViewInit(this);\n    }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): void {\n        this.context.ngOnDestroy(this);\n    }\n/**\n * @return {?}\n */\npublic ngAfterContentChecked(): void {\n        this.tagObjects[0].instance = this.childSheets;\n        if (this.childDefinedNames) {\n                    this.tagObjects[1].instance = /** @type {?} */(( this.childDefinedNames as any));\n                }\n        this.context.ngAfterContentChecked(this);\n    }\npublic registerEvents: (eventList: string[]) => void;\npublic addTwoWay: (propList: string[]) => void;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ejs-spreadsheet',\n    inputs: inputs,\n    outputs: outputs,\n    template: '',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    queries: {\n        childSheets: new ContentChild(SheetsDirective), \n        childDefinedNames: new ContentChild(DefinedNamesDirective)\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ViewContainerRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'template': [{ type: ContentChild, args: ['template', ] },],\n};\n}\n\nfunction SpreadsheetComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSpreadsheetComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSpreadsheetComponent.ctorParameters;\n/** @type {?} */\nSpreadsheetComponent.propDecorators;\n/** @type {?} */\nSpreadsheetComponent.prototype.context;\n/** @type {?} */\nSpreadsheetComponent.prototype.tagObjects;\n/** @type {?} */\nSpreadsheetComponent.prototype.actionBegin;\n/** @type {?} */\nSpreadsheetComponent.prototype.actionComplete;\n/** @type {?} */\nSpreadsheetComponent.prototype.afterHyperlinkClick;\n/** @type {?} */\nSpreadsheetComponent.prototype.afterHyperlinkCreate;\n/** @type {?} */\nSpreadsheetComponent.prototype.beforeCellFormat;\n/** @type {?} */\nSpreadsheetComponent.prototype.beforeCellRender;\n/** @type {?} */\nSpreadsheetComponent.prototype.beforeCellSave;\n/** @type {?} */\nSpreadsheetComponent.prototype.beforeCellUpdate;\n/** @type {?} */\nSpreadsheetComponent.prototype.beforeConditionalFormat;\n/** @type {?} */\nSpreadsheetComponent.prototype.beforeDataBound;\n/** @type {?} */\nSpreadsheetComponent.prototype.beforeHyperlinkClick;\n/** @type {?} */\nSpreadsheetComponent.prototype.beforeHyperlinkCreate;\n/** @type {?} */\nSpreadsheetComponent.prototype.beforeOpen;\n/** @type {?} */\nSpreadsheetComponent.prototype.beforeSave;\n/** @type {?} */\nSpreadsheetComponent.prototype.beforeSelect;\n/** @type {?} */\nSpreadsheetComponent.prototype.beforeSort;\n/** @type {?} */\nSpreadsheetComponent.prototype.cellEdit;\n/** @type {?} */\nSpreadsheetComponent.prototype.cellEditing;\n/** @type {?} */\nSpreadsheetComponent.prototype.cellSave;\n/** @type {?} */\nSpreadsheetComponent.prototype.contextMenuBeforeClose;\n/** @type {?} */\nSpreadsheetComponent.prototype.contextMenuBeforeOpen;\n/** @type {?} */\nSpreadsheetComponent.prototype.contextMenuItemSelect;\n/** @type {?} */\nSpreadsheetComponent.prototype.created;\n/** @type {?} */\nSpreadsheetComponent.prototype.dataBound;\n/** @type {?} */\nSpreadsheetComponent.prototype.dataSourceChanged;\n/** @type {?} */\nSpreadsheetComponent.prototype.dialogBeforeOpen;\n/** @type {?} */\nSpreadsheetComponent.prototype.fileMenuBeforeClose;\n/** @type {?} */\nSpreadsheetComponent.prototype.fileMenuBeforeOpen;\n/** @type {?} */\nSpreadsheetComponent.prototype.fileMenuItemSelect;\n/** @type {?} */\nSpreadsheetComponent.prototype.openComplete;\n/** @type {?} */\nSpreadsheetComponent.prototype.openFailure;\n/** @type {?} */\nSpreadsheetComponent.prototype.queryCellInfo;\n/** @type {?} */\nSpreadsheetComponent.prototype.saveComplete;\n/** @type {?} */\nSpreadsheetComponent.prototype.select;\n/** @type {?} */\nSpreadsheetComponent.prototype.sortComplete;\n/** @type {?} */\nSpreadsheetComponent.prototype.childSheets;\n/** @type {?} */\nSpreadsheetComponent.prototype.childDefinedNames;\n/** @type {?} */\nSpreadsheetComponent.prototype.tags;\n/** @type {?} */\nSpreadsheetComponent.prototype.template;\n/** @type {?} */\nSpreadsheetComponent.prototype.registerEvents;\n/** @type {?} */\nSpreadsheetComponent.prototype.addTwoWay;\n/** @type {?} */\nSpreadsheetComponent.prototype.ngEle;\n/** @type {?} */\nSpreadsheetComponent.prototype.srenderer;\n/** @type {?} */\nSpreadsheetComponent.prototype.viewContainerRef;\n/** @type {?} */\nSpreadsheetComponent.prototype.injector;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ImageDirective, ImagesDirective } from './image.directive';\nimport { ChartDirective, ChartsDirective } from './chart.directive';\nimport { CellDirective, CellsDirective } from './cells.directive';\nimport { RowDirective, RowsDirective } from './rows.directive';\nimport { ColumnDirective, ColumnsDirective } from './columns.directive';\nimport { RangeDirective, RangesDirective } from './ranges.directive';\nimport { ConditionalFormatDirective, ConditionalFormatsDirective } from './conditionalformats.directive';\nimport { SheetDirective, SheetsDirective } from './sheets.directive';\nimport { DefinedNameDirective, DefinedNamesDirective } from './definednames.directive';\nimport { SpreadsheetComponent } from './spreadsheet.component';\n/**\n * NgModule definition for the Spreadsheet component.\n */\nexport class SpreadsheetModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule],\n    declarations: [\n        SpreadsheetComponent,\n        ImageDirective,\n        ImagesDirective,\n        ChartDirective,\n        ChartsDirective,\n        CellDirective,\n        CellsDirective,\n        RowDirective,\n        RowsDirective,\n        ColumnDirective,\n        ColumnsDirective,\n        RangeDirective,\n        RangesDirective,\n        ConditionalFormatDirective,\n        ConditionalFormatsDirective,\n        SheetDirective,\n        SheetsDirective,\n        DefinedNameDirective,\n        DefinedNamesDirective\n    ],\n    exports: [\n        SpreadsheetComponent,\n        ImageDirective,\n        ImagesDirective,\n        ChartDirective,\n        ChartsDirective,\n        CellDirective,\n        CellsDirective,\n        RowDirective,\n        RowsDirective,\n        ColumnDirective,\n        ColumnsDirective,\n        RangeDirective,\n        RangesDirective,\n        ConditionalFormatDirective,\n        ConditionalFormatsDirective,\n        SheetDirective,\n        SheetsDirective,\n        DefinedNameDirective,\n        DefinedNamesDirective\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SpreadsheetModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSpreadsheetModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSpreadsheetModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule, ValueProvider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ImageDirective, ImagesDirective } from './image.directive';\nimport { ChartDirective, ChartsDirective } from './chart.directive';\nimport { CellDirective, CellsDirective } from './cells.directive';\nimport { RowDirective, RowsDirective } from './rows.directive';\nimport { ColumnDirective, ColumnsDirective } from './columns.directive';\nimport { RangeDirective, RangesDirective } from './ranges.directive';\nimport { ConditionalFormatDirective, ConditionalFormatsDirective } from './conditionalformats.directive';\nimport { SheetDirective, SheetsDirective } from './sheets.directive';\nimport { DefinedNameDirective, DefinedNamesDirective } from './definednames.directive';\nimport { SpreadsheetComponent } from './spreadsheet.component';\nimport { SpreadsheetModule } from './spreadsheet.module';\nimport {Clipboard, Edit, KeyboardNavigation, KeyboardShortcut, CollaborativeEditing, Selection, ContextMenu, FormulaBar, Ribbon, Save, Open, SheetTabs, DataBind, AllModule, BasicModule, CellFormat, NumberFormat, Formula} from '@syncfusion/ej2-spreadsheet';\n\n\nexport const /** @type {?} */ ClipboardService: ValueProvider = { provide: 'SpreadsheetClipboard', useValue: Clipboard};\nexport const /** @type {?} */ EditService: ValueProvider = { provide: 'SpreadsheetEdit', useValue: Edit};\nexport const /** @type {?} */ KeyboardNavigationService: ValueProvider = { provide: 'SpreadsheetKeyboardNavigation', useValue: KeyboardNavigation};\nexport const /** @type {?} */ KeyboardShortcutService: ValueProvider = { provide: 'SpreadsheetKeyboardShortcut', useValue: KeyboardShortcut};\nexport const /** @type {?} */ CollaborativeEditingService: ValueProvider = { provide: 'SpreadsheetCollaborativeEditing', useValue: CollaborativeEditing};\nexport const /** @type {?} */ SelectionService: ValueProvider = { provide: 'SpreadsheetSelection', useValue: Selection};\nexport const /** @type {?} */ ContextMenuService: ValueProvider = { provide: 'SpreadsheetContextMenu', useValue: ContextMenu};\nexport const /** @type {?} */ FormulaBarService: ValueProvider = { provide: 'SpreadsheetFormulaBar', useValue: FormulaBar};\nexport const /** @type {?} */ RibbonService: ValueProvider = { provide: 'SpreadsheetRibbon', useValue: Ribbon};\nexport const /** @type {?} */ SaveService: ValueProvider = { provide: 'SpreadsheetSave', useValue: Save};\nexport const /** @type {?} */ OpenService: ValueProvider = { provide: 'SpreadsheetOpen', useValue: Open};\nexport const /** @type {?} */ SheetTabsService: ValueProvider = { provide: 'SpreadsheetSheetTabs', useValue: SheetTabs};\nexport const /** @type {?} */ DataBindService: ValueProvider = { provide: 'SpreadsheetDataBind', useValue: DataBind};\nexport const /** @type {?} */ AllModuleService: ValueProvider = { provide: 'SpreadsheetAllModule', useValue: AllModule};\nexport const /** @type {?} */ BasicModuleService: ValueProvider = { provide: 'SpreadsheetBasicModule', useValue: BasicModule};\nexport const /** @type {?} */ CellFormatService: ValueProvider = { provide: 'SpreadsheetCellFormat', useValue: CellFormat};\nexport const /** @type {?} */ NumberFormatService: ValueProvider = { provide: 'SpreadsheetNumberFormat', useValue: NumberFormat};\nexport const /** @type {?} */ FormulaService: ValueProvider = { provide: 'SpreadsheetFormula', useValue: Formula};\n/**\n * NgModule definition for the Spreadsheet component with providers.\n */\nexport class SpreadsheetAllModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, SpreadsheetModule],\n    exports: [\n        SpreadsheetModule\n    ],\n    providers:[\n        ClipboardService,\n        EditService,\n        KeyboardNavigationService,\n        KeyboardShortcutService,\n        CollaborativeEditingService,\n        SelectionService,\n        ContextMenuService,\n        FormulaBarService,\n        RibbonService,\n        SaveService,\n        OpenService,\n        SheetTabsService,\n        DataBindService,\n        AllModuleService,\n        BasicModuleService,\n        CellFormatService,\n        NumberFormatService,\n        FormulaService\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SpreadsheetAllModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSpreadsheetAllModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSpreadsheetAllModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport {ImageDirective,ImagesDirective,ChartDirective,ChartsDirective,CellDirective,CellsDirective,RowDirective,RowsDirective,ColumnDirective,ColumnsDirective,RangeDirective,RangesDirective,ConditionalFormatDirective,ConditionalFormatsDirective,SheetDirective,SheetsDirective,DefinedNameDirective,DefinedNamesDirective,SpreadsheetComponent,SpreadsheetModule,SpreadsheetAllModule,ClipboardService,EditService,KeyboardNavigationService,KeyboardShortcutService,CollaborativeEditingService,SelectionService,ContextMenuService,FormulaBarService,RibbonService,SaveService,OpenService,SheetTabsService,DataBindService,AllModuleService,BasicModuleService,CellFormatService,NumberFormatService,FormulaService,Workbook,WorkbookModel,Range,UsedRange,Sheet,getSheetIndex,getSheetIndexFromId,getSheetNameFromAddress,getSheetIndexByName,updateSelectedRange,getSelectedRange,getSingleSelectedRange,getSheet,getSheetNameCount,getMaxSheetId,initSheet,getSheetName,moveSheet,duplicateSheet,RangeModel,UsedRangeModel,SheetModel,Row,getRow,setRow,isHiddenRow,getRowHeight,setRowHeight,getRowsHeight,RowModel,Column,getColumn,setColumn,getColumnWidth,getColumnsWidth,isHiddenCol,ColumnModel,Cell,getCell,setCell,skipDefaultValue,wrap,getColorCode,getCustomColors,CellModel,getData,getValueFromFormat,getModel,processIdx,getRangeIndexes,getCellIndexes,getColIndex,getCellAddress,getRangeAddress,getColumnHeaderText,getIndexesFromAddress,getRangeFromAddress,getAddressFromSelectedRange,getAddressInfo,getSwapRange,isSingleCell,executeTaskAsync,WorkbookBasicModule,WorkbookAllModule,getWorkbookRequiredModules,CellStyle,FilterCollection,SortCollection,DefineName,ProtectSettings,Hyperlink,Validation,Format,ConditionalFormat,LegendSettings,DataLabelSettings,MajorGridLines,MinorGridLines,Axis,Chart,Image,AutoFillSettings,CellStyleModel,FilterCollectionModel,SortCollectionModel,DefineNameModel,ProtectSettingsModel,HyperlinkModel,ValidationModel,FormatModel,ConditionalFormatModel,LegendSettingsModel,DataLabelSettingsModel,MajorGridLinesModel,MinorGridLinesModel,AxisModel,ChartModel,ImageModel,AutoFillSettingsModel,SaveOptions,pdfLayoutSettings,BeforeSaveEventArgs,SaveCompleteEventArgs,FindOptions,ReplaceAllEventArgs,FindAllArgs,InvalidFormula,FindNext,FindPrevious,ReplaceEventArgs,BeforeReplaceEventArgs,ToolbarFind,CellFormatArgs,SetCellFormatArgs,ExtendedRange,CellStyleExtendedModel,AutoDetectInfo,ExtendedSheet,BeforeCellFormatArgs,AggregateArgs,SortDescriptor,SortEventArgs,SortOptions,BeforeSortEventArgs,BeforeHyperlinkArgs,AfterHyperlinkArgs,CellFormatCompleteEvents,FilterEventArgs,FilterOptions,BeforeFilterEventArgs,BorderOptions,InsertDeleteModelArgs,CellInfoEventArgs,MergeArgs,ClearOptions,UnprotectArgs,InsertDeleteEventArgs,ActionEventArgs,CFormattingEventArgs,DataSourceChangedEventArgs,DefinedNameEventArgs,ExtendedRowModel,BeforeCellUpdateArgs,CellUpdateArgs,checkCellValid,TextAlign,VerticalAlign,FontWeight,FontStyle,TextDecoration,FontFamily,NumberFormatType,SaveType,SortOrder,FormatType,BorderType,SheetState,ModelType,ValidationType,ValidationOperator,MergeType,HighlightCell,TopBottom,DataBar,ColorScale,IconSet,CFColor,ClearType,ChartType,ChartTheme,LegendPosition,LabelPosition,AutoFillType,AutoFillDirection,workbookDestroyed,updateSheetFromDataSource,dataSourceChanged,dataChanged,triggerDataChange,workbookOpen,beginSave,beginAction,sortImport,ribbonFind,exportDialog,getFilteredCollection,saveCompleted,applyNumberFormatting,getFormattedCellObject,refreshCellElement,setCellFormat,findAllValues,textDecorationUpdate,applyCellFormat,updateUsedRange,updateRowColCount,workbookFormulaOperation,workbookEditOperation,checkDateFormat,getFormattedBarText,activeCellChanged,openSuccess,openFailure,sheetCreated,sheetsDestroyed,aggregateComputation,getUniqueRange,removeUniquecol,checkUniqueRange,reApplyFormula,clearFormulaDependentCells,getFormulaInfoTable,formulaInValidation,beforeSort,initiateSort,sortComplete,sortRangeAlert,initiatelink,beforeHyperlinkCreate,afterHyperlinkCreate,beforeHyperlinkClick,afterHyperlinkClick,addHyperlink,setLinkModel,beforeFilter,initiateFilter,filterComplete,filterRangeAlert,clearAllFilter,wrapEvent,onSave,insert,deleteAction,insertModel,deleteModel,isValidation,cellValidation,addHighlight,dataValidate,findNext,findPrevious,goto,findWorkbookHandler,replaceHandler,replaceAllHandler,showDialog,findKeyUp,removeHighlight,queryCellInfo,count,findCount,protectSheetWorkBook,updateToggle,protectsheetHandler,replaceAllDialog,unprotectsheetHandler,workBookeditAlert,setLockCells,applyLockCells,setMerge,applyMerge,mergedRange,activeCellMergedRange,insertMerge,pasteMerge,hideShow,setCFRule,cFInitialCheck,clearCFRule,initiateClearCFRule,cFRender,clear,clearCF,clearCells,setImage,setChart,initiateChart,refreshRibbonIcons,refreshChart,refreshChartSize,updateChart,deleteChartColl,initiateChartModel,focusChartBorder,saveError,validationHighlight,updateFilter,beforeInsert,beforeDelete,deleteHyperlink,moveOrDuplicateSheet,setAutoFill,refreshCell,getFillInfo,getautofillDDB,rowFillHandler,getTextSpace,updateCustomFormatsFromImport,cFUndo,refreshClipboard,updateView,selectionComplete,refreshInsertDelete,getUpdatedFormulaOnInsertDelete,checkConditionalFormat,beforeCellUpdate,checkIsFormula,isCellReference,isChar,isRowSelected,isColumnSelected,inRange,isInRange,isLocked,isValidCellReference,skipHiddenIdx,isHeightCheckNeeded,getUpdatedFormula,updateCell,getDataRange,insertFormatRange,deleteFormatRange,toFraction,getGcd,intToDate,dateToInt,isDateTime,isNumber,toDate,parseIntValue,ToDateArgs,workbookLocale,localeData,DataBind,WorkbookOpen,WorkbookSave,WorkbookFormula,WorkbookNumberFormat,getFormatFromType,getTypeFromFormat,WorkbookSort,WorkbookFilter,WorkbookImage,WorkbookChart,WorkbookCellFormat,WorkbookEdit,WorkbookHyperlink,WorkbookInsert,WorkbookDelete,WorkbookDataValidation,WorkbookFindAndReplace,WorkbookProtectSheet,WorkbookMerge,WorkbookConditionalFormat,WorkbookAutoFill,getRequiredModules,SelectionMode,PasteSpecialType,RefreshType,FindModeType,ribbon,formulaBar,sheetTabs,refreshSheetTabs,isFormulaBarEdit,initialLoad,contentLoaded,mouseDown,spreadsheetDestroyed,editOperation,formulaOperation,formulaBarOperation,click,keyUp,keyDown,formulaKeyUp,formulaBarUpdate,onVerticalScroll,onHorizontalScroll,beforeContentLoaded,beforeVirtualContentLoaded,virtualContentLoaded,contextMenuOpen,cellNavigate,mouseUpAfterSelection,cMenuBeforeOpen,insertSheetTab,removeSheetTab,renameSheetTab,ribbonClick,refreshRibbon,enableToolbarItems,tabSwitch,selectRange,cut,copy,paste,clearCopy,dataBound,beforeDataBound,addContextMenuItems,removeContextMenuItems,enableContextMenuItems,enableFileMenuItems,hideFileMenuItems,addFileMenuItems,hideRibbonTabs,enableRibbonTabs,addRibbonTabs,addToolbarItems,hideToolbarItems,beforeRibbonCreate,rowHeightChanged,colWidthChanged,onContentScroll,deInitProperties,activeSheetChanged,renameSheet,initiateCustomSort,applySort,collaborativeUpdate,autoFit,updateToggleItem,initiateHyperlink,editHyperlink,openHyperlink,removeHyperlink,createHyperlinkElement,sheetNameUpdate,hideSheet,performUndoRedo,updateUndoRedoCollection,setActionData,getBeforeActionData,clearUndoRedoCollection,initiateFilterUI,renderFilterCell,reapplyFilter,filterByCellValue,clearFilter,getFilteredColumn,completeAction,filterCellKeyDown,getFilterRange,setAutoFit,refreshFormulaDatasource,setScrollEvent,initiateDataValidation,validationError,startEdit,invalidData,clearInvalid,protectSheet,applyProtect,unprotectSheet,protectCellFormat,gotoDlg,findDlg,findHandler,replace,created,editAlert,setUndoRedo,enableFormulaInput,protectSelection,hiddenMerge,checkPrevMerge,checkMerge,removeDataValidation,showAggregate,initiateConditionalFormat,setCF,clearViewer,initiateFormulaReference,initiateCur,clearCellRef,editValue,addressHandle,initiateEdit,forRefSelRender,blankWorkbook,insertImage,refreshImgElem,refreshImgCellObj,getRowIdxFromClientY,getColIdxFromClientX,createImageElement,deleteImage,deleteChart,refreshChartCellObj,refreshImagePosition,updateTableWidth,focusBorder,clearChartBorder,insertChart,chartRangeSelection,insertDesignChart,removeDesignChart,chartDesignTab,addChartEle,isReact,renderReactTemplates,clearTemplate,protectWorkbook,unProtectWorkbook,getPassWord,importProtectWorkbook,selectionStatus,freeze,overlayEleSize,updateScroll,positionAutoFillElement,hideAutoFillOptions,performAutoFill,selectAutoFillRange,autoFill,fillRange,UnProtectWorksheet,hideAutoFillElement,unProtectSheetPassword,updateTranslate,getUpdatedScrollPosition,updateScrollValue,IRenderer,SheetRenderArgs,FilterInfoArgs,CellRenderEventArgs,StyleType,FormulaBarEdit,IViewport,IOffset,IScrollArgs,IRowRenderer,ICellRenderer,RefreshArgs,OpenOptions,BeforeOpenEventArgs,DialogBeforeOpenEventArgs,MenuSelectEventArgs,OpenFailureArgs,BeforeSelectEventArgs,SelectEventArgs,CellRenderArgs,IAriaOptions,CellEditEventArgs,CellSaveEventArgs,ConditionalFormatEventArgs,CollaborativeEditArgs,HideShowEventArgs,UndoRedoEventArgs,BeforeActionData,BeforeImageData,BeforeImageRefreshData,PreviousCellDetails,BeforePasteEventArgs,BeforeWrapEventArgs,WrapEventArgs,CellValidationEventArgs,BeforeChartEventArgs,ScrollEventArgs,AutoFillEventArgs,getUpdateUsingRaf,removeAllChildren,getColGroupWidth,getScrollBarWidth,getSiblingsHeight,inView,getCellPosition,setPosition,removeRangeEle,locateElem,setStyleAttribute,getStartEvent,getMoveEvent,getEndEvent,isTouchStart,isTouchMove,isTouchEnd,isMouseDown,isMouseMove,isMouseUp,getClientX,getClientY,getDPRValue,setAriaOptions,destroyComponent,setResize,setWidthAndHeight,setTextLineHeight,findMaxValue,updateAction,hasTemplate,setRowEleHeight,getTextHeight,getLineHeight,getTextWidth,getLines,getBorderHeight,getExcludedColumnWidth,getTextHeightWithBorder,setMaxHgt,getMaxHgt,focus,isLockedCells,isDiscontinuousRange,clearRange,BasicModule,AllModule,ScrollSettings,SelectionSettings,ScrollSettingsModel,SelectionSettingsModel,DISABLED,WRAPTEXT,locale,dialog,actionEvents,overlay,fontColor,fillColor,keyCodes,defaultLocale,Spreadsheet,SpreadsheetModel,Clipboard,Edit,Selection,Scroll,VirtualScroll,KeyboardNavigation,KeyboardShortcut,CellFormat,Resize,CollaborativeEditing,ShowHide,SpreadsheetHyperlink,UndoRedo,WrapText,Insert,Delete,DataValidation,ProtectSheet,FindAndReplace,Merge,ConditionalFormatting,AutoFill,Ribbon,FormulaBar,Formula,SheetTabs,Open,Save,ContextMenu,NumberFormat,RefreshValueArgs,Sort,Filter,SpreadsheetImage,SpreadsheetChart,Render,SheetRender,RowRenderer,CellRenderer,Calculate,FormulaError,FormulaInfo,CalcSheetFamilyItem,getAlphalabel,ValueChangedArgs,CalculateModel,FormulaErrorModel,FormulaInfoModel,CalcSheetFamilyItemModel,ValueChangedArgsModel,Parser,CalculateCommon,isUndefined,getSkeletonVal,isExternalFileLink,getModules,ModuleDeclaration,IParent,getValue,setValue,ModuleLoader,CommonErrors,FormulasErrorsStrings,ExcelFileFormats,FailureEventArgs,IFormulaColl,StoredCellInfo,IBasicFormula,BasicFormulas} from './public_api';\n\nexport {inputs as ɵa,outputs as ɵb} from './src/spreadsheet/spreadsheet.component';"]}