/**
 * @fileoverview added by tsickle
 * Generated from: lib/senwes-authorization.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Injectable, isDevMode } from '@angular/core';
import { JwtHelperService } from '@auth0/angular-jwt';
import { HttpClient, HttpHeaders } from '@angular/common/http';
import { take } from 'rxjs/operators';
import { senwes_dev_token } from './senwes_token_dev';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common/http";
var SenwesAuthorizationService = /** @class */ (function () {
    function SenwesAuthorizationService(_http) {
        this._http = _http;
        this.base_url = window.location.origin;
        this.appId = '';
        this.jwtHelper = new JwtHelperService();
    }
    /**
     * Retrieves raw token from local storage
     */
    /**
     * Retrieves raw token from local storage
     * @return {?}
     */
    SenwesAuthorizationService.prototype.getToken = /**
     * Retrieves raw token from local storage
     * @return {?}
     */
    function () {
        if (isDevMode()) {
            return localStorage.getItem("senwes_token_dev");
        }
        return localStorage.getItem("senwes_token");
    };
    /**
     * Retrieves decoded token from local storage
     */
    /**
     * Retrieves decoded token from local storage
     * @return {?}
     */
    SenwesAuthorizationService.prototype.getDecodedToken = /**
     * Retrieves decoded token from local storage
     * @return {?}
     */
    function () {
        if (isDevMode()) {
            return this.jwtHelper.decodeToken(localStorage.getItem("senwes_token_dev"));
        }
        return this.jwtHelper.decodeToken(localStorage.getItem("senwes_token"));
    };
    /**
     * Confirms validity of token
     */
    /**
     * Confirms validity of token
     * @param {?} appId
     * @param {?=} customDevToken
     * @return {?}
     */
    SenwesAuthorizationService.prototype.authenticateToken = /**
     * Confirms validity of token
     * @param {?} appId
     * @param {?=} customDevToken
     * @return {?}
     */
    function (appId, customDevToken) {
        if (customDevToken === void 0) { customDevToken = null; }
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var _this = this;
            return tslib_1.__generator(this, function (_a) {
                return [2 /*return*/, new Promise((/**
                     * @param {?} resolve
                     * @param {?} reject
                     * @return {?}
                     */
                    function (resolve, reject) {
                        if (isDevMode()) {
                            localStorage.removeItem('senwes_token_dev');
                            if (customDevToken != null) {
                                localStorage.setItem('senwes_token_dev', customDevToken);
                            }
                            else {
                                localStorage.setItem('senwes_token_dev', senwes_dev_token);
                            }
                            resolve(true);
                            _this.initializeUser();
                        }
                        else {
                            _this.appId = appId;
                            /** @type {?} */
                            var url = '';
                            if (_this.base_url.indexOf("online-qa.senwes.co.za") > -1 || _this.base_url.indexOf("online-qa.hinterland.co.za") > -1 || _this.base_url.indexOf("online-qa.my-intranet.co.za") > -1) {
                                url = "https://wsstaging.senwes.co.za/api/oneagri/security/api/Authentication/Validate/Token";
                            }
                            else {
                                url = "https://ws.senwes.co.za/service/oneagri/security/api/Authentication/Validate/Token";
                            }
                            /** @type {?} */
                            var headers = new HttpHeaders({
                                'Content-Type': 'application/json',
                                'Authorization': "Bearer " + _this.getLocalToken()
                            });
                            _this._http.get(url, { headers: headers })
                                .pipe(take(1))
                                .subscribe((/**
                             * @param {?} res
                             * @return {?}
                             */
                            function (res) {
                                if (res === false) {
                                    localStorage.removeItem('senwes_token');
                                    _this.redirectJWTIssuerPage(appId);
                                    resolve(false);
                                }
                                else if (res === true) {
                                    resolve(true);
                                    _this.initializeUser();
                                }
                                else {
                                    resolve(false);
                                    console.error('Unxpected response validate token: ', res);
                                    _this.redirectAccessDenied();
                                }
                            }), (/**
                             * @param {?} error
                             * @return {?}
                             */
                            function (error) {
                                reject(false);
                                console.error("AuthService unexpected error occurred", error);
                                _this.redirectAccessDenied();
                            }));
                        }
                    }))];
            });
        });
    };
    /**
     * @private
     * @return {?}
     */
    SenwesAuthorizationService.prototype.getLocalToken = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var token = '';
        if (isDevMode()) {
            token = localStorage.getItem("senwes_token_dev");
        }
        else {
            token = localStorage.getItem("senwes_token");
        }
        return token;
    };
    /**
     * @private
     * @param {?} returnURL
     * @return {?}
     */
    SenwesAuthorizationService.prototype.redirectJWTIssuerPage = /**
     * @private
     * @param {?} returnURL
     * @return {?}
     */
    function (returnURL) {
        if (this.base_url.indexOf("online-qa.senwes.co.za") > -1 || this.base_url.indexOf("online-qa.hinterland.co.za") > -1 || this.base_url.indexOf("online-qa.my-intranet.co.za") > -1) {
            window.location.href = "https://integration-qa.senwes.co.za/service/security/oneagri/auth/authentication?ApplicationID=" + this.appId;
        }
        else {
            window.location.href = "https://identity.oneagri.co.za/authentication?ApplicationID=" + this.appId;
        }
    };
    /**
     * @return {?}
     */
    SenwesAuthorizationService.prototype.signout = /**
     * @return {?}
     */
    function () {
        localStorage.removeItem('senwes_token');
        localStorage.removeItem('senwes_token_dev');
        if (isDevMode()) {
            window.location.reload;
        }
        else {
            if (this.base_url.indexOf("online-qa.senwes.co.za") > -1 || this.base_url.indexOf("online-qa.hinterland.co.za") > -1 || this.base_url.indexOf("online-qa.my-intranet.co.za") > -1) {
                window.location.href = "https://integration-qa.senwes.co.za/service/security/oneagri/auth/signout";
            }
            else {
                window.location.href = "https://identity.oneagri.co.za/signout";
            }
        }
    };
    /**
     * @return {?}
     */
    SenwesAuthorizationService.prototype.home = /**
     * @return {?}
     */
    function () {
        if (isDevMode()) {
            window.location.reload;
        }
        else {
            window.location.href = this.base_url;
        }
    };
    /**
     * @private
     * @return {?}
     */
    SenwesAuthorizationService.prototype.redirectAccessDenied = /**
     * @private
     * @return {?}
     */
    function () {
        window.location.href = "http://www.oneagri.co.za/auth/accessdenied/";
    };
    /**
     * @return {?}
     */
    SenwesAuthorizationService.prototype.getUserRoles = /**
     * @return {?}
     */
    function () {
        if (this._user) {
            return this._user.role;
        }
    };
    /**
     * @param {?} roleName
     * @return {?}
     */
    SenwesAuthorizationService.prototype.isUserInRole = /**
     * @param {?} roleName
     * @return {?}
     */
    function (roleName) {
        if (this._user) {
            if (Array.isArray(this._user.role)) {
                /** @type {?} */
                var res = this._user.role.findIndex((/**
                 * @param {?} x
                 * @return {?}
                 */
                function (x) { return x == roleName; }));
                return (res !== -1);
            }
            else {
                return (roleName === this._user.role);
            }
        }
    };
    /**
     * @param {?} filter
     * @return {?}
     */
    SenwesAuthorizationService.prototype.getUserPermissionsBySystemName = /**
     * @param {?} filter
     * @return {?}
     */
    function (filter) {
        if (this._user) {
            if (Array.isArray(this._user.permissions)) {
                /** @type {?} */
                var res = this._user.permissions.filter((/**
                 * @param {?} x
                 * @return {?}
                 */
                function (x) { return x.SystemName == filter; }));
                return res;
            }
        }
    };
    /**
     * @param {?} permissionGroup
     * @param {?} permissionName
     * @return {?}
     */
    SenwesAuthorizationService.prototype.hasPermission = /**
     * @param {?} permissionGroup
     * @param {?} permissionName
     * @return {?}
     */
    function (permissionGroup, permissionName) {
        if (this._user) {
            if (Array.isArray(this._user.permissions)) {
                /** @type {?} */
                var res = this._user.permissions.filter((/**
                 * @param {?} x
                 * @return {?}
                 */
                function (x) { return x.PermissionGroup == permissionGroup && x.PermissionName == permissionName; }));
                return res.length > 0;
            }
        }
    };
    /**
     * @return {?}
     */
    SenwesAuthorizationService.prototype.getRawUserObject = /**
     * @return {?}
     */
    function () {
        return this._user;
    };
    /**
     * @return {?}
     */
    SenwesAuthorizationService.prototype.getUserWindowsClaim = /**
     * @return {?}
     */
    function () {
        if (this._user) {
            return this._user.windowsuserclaim;
        }
    };
    /**
     * @return {?}
     */
    SenwesAuthorizationService.prototype.getUserCompany = /**
     * @return {?}
     */
    function () {
        if (this._user.employee) {
            return this._user.employee.company;
        }
    };
    /**
     * @return {?}
     */
    SenwesAuthorizationService.prototype.getUserDivision = /**
     * @return {?}
     */
    function () {
        if (this._user.employee) {
            return this._user.employee.division;
        }
    };
    /**
     * @return {?}
     */
    SenwesAuthorizationService.prototype.getUserSection = /**
     * @return {?}
     */
    function () {
        if (this._user.employee) {
            return this._user.employee.section;
        }
    };
    /**
     * @return {?}
     */
    SenwesAuthorizationService.prototype.getUserJobTitle = /**
     * @return {?}
     */
    function () {
        if (this._user.employee) {
            return this._user.employee.jobtitle;
        }
    };
    /**
     * @return {?}
     */
    SenwesAuthorizationService.prototype.getUserEmpObfuscation = /**
     * @return {?}
     */
    function () {
        if (this._user.employee) {
            return this._user.employee.employeeobfuscation;
        }
    };
    /**
     * @return {?}
     */
    SenwesAuthorizationService.prototype.getUserSite = /**
     * @return {?}
     */
    function () {
        if (this._user.employee) {
            return this._user.employee.site;
        }
    };
    /**
     * @return {?}
     */
    SenwesAuthorizationService.prototype.getUserReportsTo = /**
     * @return {?}
     */
    function () {
        if (this._user.employee) {
            return this._user.employee.reportsTo;
        }
    };
    /**
     * @return {?}
     */
    SenwesAuthorizationService.prototype.getUserDepartment = /**
     * @return {?}
     */
    function () {
        if (this._user.employee) {
            return this._user.employee.department;
        }
    };
    /**
     * @return {?}
     */
    SenwesAuthorizationService.prototype.getUserEmployeeNumber = /**
     * @return {?}
     */
    function () {
        if (this._user) {
            return this._user.employeeNo;
        }
    };
    /**
     * @return {?}
     */
    SenwesAuthorizationService.prototype.getUserOneId = /**
     * @return {?}
     */
    function () {
        if (this._user) {
            return this._user.oneid;
        }
    };
    /**
     * @return {?}
     */
    SenwesAuthorizationService.prototype.getUserDisplayName = /**
     * @return {?}
     */
    function () {
        if (this._user) {
            return this._user.given_name + " " + this._user.family_name;
        }
    };
    /**
     * @return {?}
     */
    SenwesAuthorizationService.prototype.getUserEmployeeInfo = /**
     * @return {?}
     */
    function () {
        if (this._user) {
            return this._user.employee;
        }
    };
    /**
     * @return {?}
     */
    SenwesAuthorizationService.prototype.getTokenExpired = /**
     * @return {?}
     */
    function () {
        this._user = this.jwtHelper.decodeToken(this.getToken());
        if (this._user) {
            return this._user.exp < Math.floor(Date.now() / 1000);
        }
    };
    /**
     * @return {?}
     */
    SenwesAuthorizationService.prototype.initializeUser = /**
     * @return {?}
     */
    function () {
        this._user = this.jwtHelper.decodeToken(this.getToken());
        if (typeof this._user.role !== 'undefined' && !Array.isArray(this._user.role)) {
            this._user.role = [this._user.role];
        }
        if (typeof this._user.permissions !== 'undefined' && !Array.isArray(this._user.permissions)) {
            this._user.permissions = [this._user.permissions];
        }
    };
    SenwesAuthorizationService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];
    /** @nocollapse */
    SenwesAuthorizationService.ctorParameters = function () { return [
        { type: HttpClient }
    ]; };
    /** @nocollapse */ SenwesAuthorizationService.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function SenwesAuthorizationService_Factory() { return new SenwesAuthorizationService(i0.ɵɵinject(i1.HttpClient)); }, token: SenwesAuthorizationService, providedIn: "root" });
    return SenwesAuthorizationService;
}());
export { SenwesAuthorizationService };
if (false) {
    /** @type {?} */
    SenwesAuthorizationService.prototype.base_url;
    /** @type {?} */
    SenwesAuthorizationService.prototype.appId;
    /**
     * @type {?}
     * @private
     */
    SenwesAuthorizationService.prototype._user;
    /** @type {?} */
    SenwesAuthorizationService.prototype.jwtHelper;
    /**
     * @type {?}
     * @private
     */
    SenwesAuthorizationService.prototype._http;
}
//# sourceMappingURL=data:application/json;base64,