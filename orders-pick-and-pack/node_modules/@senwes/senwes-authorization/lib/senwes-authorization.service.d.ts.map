{"version":3,"file":"senwes-authorization.service.d.ts","sources":["senwes-authorization.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { IUser } from './user.model';\r\nimport { IEmployee } from './employee.model';\r\nimport { IPermission } from './permission.model';\r\nexport declare class SenwesAuthorizationService {\r\n    private _http;\r\n    base_url: string;\r\n    appId: string;\r\n    private _user;\r\n    jwtHelper: JwtHelperService;\r\n    constructor(_http: HttpClient);\r\n    /**\r\n     * Retrieves raw token from local storage\r\n     */\r\n    getToken(): string;\r\n    /**\r\n     * Retrieves decoded token from local storage\r\n     */\r\n    getDecodedToken(): any;\r\n    /**\r\n     * Confirms validity of token\r\n     */\r\n    authenticateToken(appId: string, customDevToken?: string): Promise<boolean>;\r\n    private getLocalToken;\r\n    private redirectJWTIssuerPage;\r\n    signout(): void;\r\n    home(): void;\r\n    private redirectAccessDenied;\r\n    getUserRoles(): Array<string>;\r\n    isUserInRole(roleName: string): boolean;\r\n    getUserPermissionsBySystemName(filter: string): IPermission[];\r\n    hasPermission(permissionGroup: string, permissionName: string): boolean;\r\n    getRawUserObject(): IUser;\r\n    getUserWindowsClaim(): string;\r\n    getUserCompany(): string;\r\n    getUserDivision(): string;\r\n    getUserSection(): string;\r\n    getUserJobTitle(): string;\r\n    getUserEmpObfuscation(): string;\r\n    getUserSite(): string;\r\n    getUserReportsTo(): string;\r\n    getUserDepartment(): string;\r\n    getUserEmployeeNumber(): string;\r\n    getUserOneId(): string;\r\n    getUserDisplayName(): string;\r\n    getUserEmployeeInfo(): IEmployee;\r\n    getTokenExpired(): boolean;\r\n    initializeUser(): void;\r\n}\r\n"]}